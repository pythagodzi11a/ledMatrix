#ifndef __EXPRESSION__
#define __EXPRESSION__

#include <stdio.h>
#include <Arduino.h>
#include <FastLED.h>

#define NUM_LEDS 64
#define DATA_PIN A0
#define LED_TYPE WS2812
#define COLOR_ORDER GRB

uint8_t max_bright = 122;

CRGB leds[NUM_LEDS];

// Numbers
byte one[] = {
    0x00, 0x08, 0x18, 0x28, 0x08, 0x08, 0x08, 0x3e};
byte two[] = {
    0x00, 0x18, 0x24, 0x24, 0x08, 0x10, 0x20, 0x3c};
byte three[] = {
    0x00, 0x1c, 0x22, 0x02, 0x0c, 0x02, 0x22, 0x1c};
byte four[] = {
    0x00, 0x00, 0x24, 0x24, 0x24, 0x3c, 0x04, 0x04};
byte five[] = {
    0x00, 0x3c, 0x20, 0x20, 0x3c, 0x04, 0x04, 0x3c};
byte six[] = {
    0x00, 0x3c, 0x20, 0x20, 0x3c, 0x24, 0x24, 0x3c};
byte seven[] = {
    0x00, 0x00, 0x3c, 0x04, 0x04, 0x04, 0x04, 0x04};
byte eight[] = {
    0x00, 0x3c, 0x24, 0x24, 0x3c, 0x24, 0x24, 0x3c};
byte nine[] = {
    0x00, 0x3c, 0x24, 0x24, 0x3c, 0x04, 0x04, 0x04};
byte zero[] = {
    0x00, 0x3c, 0x24, 0x24, 0x24, 0x24, 0x24, 0x3c};

// expressions

byte wrong[] = {
    0x00, 0x00, 0xa5, 0x42, 0xa5, 0x00, 0x3c, 0x42};
byte shy[] = {
    0x00, 0x00, 0x42, 0x24, 0x42, 0x18, 0x00, 0x00};
byte heart[] = {
    0x00, 0x66, 0xff, 0xff, 0x7e, 0x3c, 0x18, 0x00};
byte tick[] = {
    0x00, 0x01, 0x02, 0x04, 0x88, 0x50, 0x20, 0x00};
byte shock[] = {
    0x00, 0xe7, 0xa5, 0xe7, 0x00, 0x18, 0x24, 0x3c};
byte sigama[] = {
    0x00, 0x3e, 0x12, 0x08, 0x08, 0x12, 0x3e, 0x00};
byte watchCenter[] = {
    0x00, 0x00, 0x66, 0x66, 0x00, 0x18, 0x00, 0x00};
byte watchLeft[] = {
    0x00, 0x00, 0xcc, 0xcc, 0x00, 0x18, 0x00, 0x00};
byte watchRight[] = {
    0x00, 0x00, 0x33, 0x33, 0x00, 0x18, 0x00, 0x00};

void displayWhite(byte *expression)
{
  for (int row = 0; row < 8; row++)
  {
    byte rowData = expression[row];
    for (int col = 0; col < 8; col++)
    {
      // 检查该LED是否应该亮
      if (rowData & (1 << (7 - col)))
      {
        leds[row * 8 + col] = CRGB::White;
      }
      else
      {
        leds[row * 8 + col] = CRGB::Black;
      }
    }
  }
}

void displayColor(byte *expression, int HSV_H, int HSV_S, int HSV_V)
{
  for (int row = 0; row < 8; row++)
  {
    byte rowData = expression[row];
    for (int col = 0; col < 8; col++)
    {
      if (rowData & (1 << (7 - col)))
      {
        leds[row * 8 + col] = CHSV(HSV_H, HSV_S, HSV_V);
      }
      else
      {
        leds[row * 8 + col] = CRGB::Black;
      }
    }
  }
}

#endif